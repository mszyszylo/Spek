// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Spek::SpekPackageTests::ProductTarget" /* SpekPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_52 /* Build configuration list for PBXAggregateTarget "SpekPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_55 /* PBXTargetDependency */,
			);
			name = SpekPackageTests;
			productName = SpekPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		D25F73E523CA7816003CCD9E /* SpekTestCase.swift in Sources */ = {isa = PBXBuildFile; fileRef = D25F73E423CA7816003CCD9E /* SpekTestCase.swift */; };
		OBJ_32 /* Part.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* Part.swift */; };
		OBJ_33 /* Spek.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Spek.swift */; };
		OBJ_34 /* XPart.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* XPart.swift */; };
		OBJ_36 /* SpekHelper.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Spek::SpekHelper::Product" /* SpekHelper.framework */; };
		OBJ_43 /* SpekHelperTestCase.m in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* SpekHelperTestCase.m */; };
		OBJ_50 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_61 /* SpekTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* SpekTests.swift */; };
		OBJ_62 /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* XCTestManifests.swift */; };
		OBJ_64 /* Spek.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Spek::Spek::Product" /* Spek.framework */; };
		OBJ_65 /* SpekHelper.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Spek::SpekHelper::Product" /* SpekHelper.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		D25F73E023CA780A003CCD9E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Spek::SpekHelper";
			remoteInfo = SpekHelper;
		};
		D25F73E123CA780A003CCD9E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Spek::Spek";
			remoteInfo = Spek;
		};
		D25F73E223CA780A003CCD9E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Spek::SpekHelper";
			remoteInfo = SpekHelper;
		};
		D25F73E323CA780B003CCD9E /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Spek::SpekTests";
			remoteInfo = SpekTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		D25F73E423CA7816003CCD9E /* SpekTestCase.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SpekTestCase.swift; sourceTree = "<group>"; };
		OBJ_10 /* Spek.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Spek.swift; sourceTree = "<group>"; };
		OBJ_11 /* XPart.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XPart.swift; sourceTree = "<group>"; };
		OBJ_13 /* SpekHelperTestCase.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = SpekHelperTestCase.h; sourceTree = "<group>"; };
		OBJ_14 /* SpekHelperTestCase.m */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.objc; path = SpekHelperTestCase.m; sourceTree = "<group>"; };
		OBJ_17 /* SpekTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SpekTests.swift; sourceTree = "<group>"; };
		OBJ_18 /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		OBJ_23 /* Screenshots */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Screenshots; sourceTree = SOURCE_ROOT; };
		OBJ_24 /* DerivedData */ = {isa = PBXFileReference; lastKnownFileType = folder; path = DerivedData; sourceTree = SOURCE_ROOT; };
		OBJ_25 /* LICENSE.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = LICENSE.md; sourceTree = "<group>"; };
		OBJ_26 /* README.md */ = {isa = PBXFileReference; lastKnownFileType = net.daringfireball.markdown; path = README.md; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* Part.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Part.swift; sourceTree = "<group>"; };
		"Spek::Spek::Product" /* Spek.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = Spek.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Spek::SpekHelper::Product" /* SpekHelper.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = SpekHelper.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Spek::SpekTests::Product" /* SpekTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = SpekTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_35 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_36 /* SpekHelper.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_44 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_63 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_64 /* Spek.framework in Frameworks */,
				OBJ_65 /* SpekHelper.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_12 /* SpekHelper */ = {
			isa = PBXGroup;
			children = (
				OBJ_13 /* SpekHelperTestCase.h */,
				OBJ_14 /* SpekHelperTestCase.m */,
			);
			name = SpekHelper;
			path = Sources/SpekHelper;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_15 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_16 /* SpekTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_16 /* SpekTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* SpekTests.swift */,
				OBJ_18 /* XCTestManifests.swift */,
			);
			name = SpekTests;
			path = Tests/SpekTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_19 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Spek::Spek::Product" /* Spek.framework */,
				"Spek::SpekTests::Product" /* SpekTests.xctest */,
				"Spek::SpekHelper::Product" /* SpekHelper.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_15 /* Tests */,
				OBJ_19 /* Products */,
				OBJ_23 /* Screenshots */,
				OBJ_24 /* DerivedData */,
				OBJ_25 /* LICENSE.md */,
				OBJ_26 /* README.md */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Spek */,
				OBJ_12 /* SpekHelper */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Spek */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Part.swift */,
				OBJ_10 /* Spek.swift */,
				OBJ_11 /* XPart.swift */,
				D25F73E423CA7816003CCD9E /* SpekTestCase.swift */,
			);
			name = Spek;
			path = Sources/Spek;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Spek::Spek" /* Spek */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_28 /* Build configuration list for PBXNativeTarget "Spek" */;
			buildPhases = (
				OBJ_31 /* Sources */,
				OBJ_35 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_37 /* PBXTargetDependency */,
			);
			name = Spek;
			productName = Spek;
			productReference = "Spek::Spek::Product" /* Spek.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Spek::SpekHelper" /* SpekHelper */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_39 /* Build configuration list for PBXNativeTarget "SpekHelper" */;
			buildPhases = (
				OBJ_42 /* Sources */,
				OBJ_44 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SpekHelper;
			productName = SpekHelper;
			productReference = "Spek::SpekHelper::Product" /* SpekHelper.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Spek::SpekTests" /* SpekTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_57 /* Build configuration list for PBXNativeTarget "SpekTests" */;
			buildPhases = (
				OBJ_60 /* Sources */,
				OBJ_63 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_66 /* PBXTargetDependency */,
				OBJ_67 /* PBXTargetDependency */,
			);
			name = SpekTests;
			productName = SpekTests;
			productReference = "Spek::SpekTests::Product" /* SpekTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Spek::SwiftPMPackageDescription" /* SpekPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_46 /* Build configuration list for PBXNativeTarget "SpekPackageDescription" */;
			buildPhases = (
				OBJ_49 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SpekPackageDescription;
			productName = SpekPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftMigration = 9999;
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Spek" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_19 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Spek::Spek" /* Spek */,
				"Spek::SpekHelper" /* SpekHelper */,
				"Spek::SwiftPMPackageDescription" /* SpekPackageDescription */,
				"Spek::SpekPackageTests::ProductTarget" /* SpekPackageTests */,
				"Spek::SpekTests" /* SpekTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_31 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				D25F73E523CA7816003CCD9E /* SpekTestCase.swift in Sources */,
				OBJ_32 /* Part.swift in Sources */,
				OBJ_33 /* Spek.swift in Sources */,
				OBJ_34 /* XPart.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_42 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_43 /* SpekHelperTestCase.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_49 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_50 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_60 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_61 /* SpekTests.swift in Sources */,
				OBJ_62 /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_37 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Spek::SpekHelper" /* SpekHelper */;
			targetProxy = D25F73E023CA780A003CCD9E /* PBXContainerItemProxy */;
		};
		OBJ_55 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Spek::SpekTests" /* SpekTests */;
			targetProxy = D25F73E323CA780B003CCD9E /* PBXContainerItemProxy */;
		};
		OBJ_66 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Spek::Spek" /* Spek */;
			targetProxy = D25F73E123CA780A003CCD9E /* PBXContainerItemProxy */;
		};
		OBJ_67 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Spek::SpekHelper" /* SpekHelper */;
			targetProxy = D25F73E223CA780A003CCD9E /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_29 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/Spek_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Spek;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Spek;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
					"DEBUG=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE DEBUG";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_30 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/Spek_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Spek;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = Spek;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"$(inherited)",
					"SWIFT_PACKAGE=1",
				);
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "$(inherited) -DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited) SWIFT_PACKAGE";
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_40 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/SpekHelper_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpekHelper;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = SpekHelper;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_41 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/SpekHelper_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) $(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpekHelper;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				TARGET_NAME = SpekHelper;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
		OBJ_47 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		OBJ_48 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 5 -I $(TOOLCHAIN_DIR)/usr/lib/swift/pm/4_2 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -package-description-version 5.1";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		OBJ_53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_54 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_58 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/SpekTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = SpekTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Debug;
		};
		OBJ_59 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = (
					"$(inherited)",
					"$(SRCROOT)/Sources/SpekHelper/include",
				);
				INFOPLIST_FILE = Spek.xcodeproj/SpekTests_Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "$(inherited) @loader_path/../Frameworks @loader_path/Frameworks";
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_CFLAGS = "$(inherited)";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = "$(inherited)";
				SWIFT_VERSION = 5.0;
				TARGET_NAME = SpekTests;
				TVOS_DEPLOYMENT_TARGET = 9.0;
				WATCHOS_DEPLOYMENT_TARGET = 2.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Spek" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_28 /* Build configuration list for PBXNativeTarget "Spek" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_29 /* Debug */,
				OBJ_30 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_39 /* Build configuration list for PBXNativeTarget "SpekHelper" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_40 /* Debug */,
				OBJ_41 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_46 /* Build configuration list for PBXNativeTarget "SpekPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_47 /* Debug */,
				OBJ_48 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_52 /* Build configuration list for PBXAggregateTarget "SpekPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_53 /* Debug */,
				OBJ_54 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		OBJ_57 /* Build configuration list for PBXNativeTarget "SpekTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_58 /* Debug */,
				OBJ_59 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
